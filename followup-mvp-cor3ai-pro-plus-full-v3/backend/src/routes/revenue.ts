import { Router } from 'express'; import { prisma } from '../prisma/client.js'; import { requireAuth, AuthRequest } from '../middleware/auth.js'; export const router=Router(); router.use(requireAuth); router.post('/',async(req:AuthRequest,res)=>{const {contactEmail,contactId,amountCents,currency,couponCode,messageId,occurredAt}=req.body||{}; if(!amountCents||amountCents<=0) return res.status(400).json({error:'amountCents required'}); let cid=contactId; if(!cid&&contactEmail){const c=await prisma.contact.findFirst({where:{organizationId:req!.user!.orgId,email:contactEmail.toLowerCase()}}); cid=c?.id} const evt=await prisma.revenueEvent.create({data:{organizationId:req!.user!.orgId,contactId:cid||undefined,amountCents:Math.floor(amountCents),currency:(currency||'USD').toUpperCase(),couponCode:couponCode?couponCode.toUpperCase():null,source:'manual',messageId:messageId||null,occurredAt:occurredAt?new Date(occurredAt):new Date()}}); res.json(evt)}); router.get('/summary',async(req:AuthRequest,res)=>{const orgId=req!.user!.orgId; const now=new Date(); const monthStart=new Date(Date.UTC(now.getUTCFullYear(),now.getUTCMonth(),1)); const day30=new Date(now.getTime()-30*24*60*60*1000); const [mtd,last30,all]=await Promise.all([prisma.revenueEvent.aggregate({where:{organizationId:orgId,occurredAt:{gte:monthStart}},_sum:{amountCents:true}}),prisma.revenueEvent.aggregate({where:{organizationId:orgId,occurredAt:{gte:day30}},_sum:{amountCents:true}}),prisma.revenueEvent.aggregate({where:{organizationId:orgId},_sum:{amountCents:true}})]); const byCoupon=await prisma.revenueEvent.groupBy({by:['couponCode'],where:{organizationId:orgId},_sum:{amountCents:true},orderBy:{_sum:{amountCents:'desc'}}}); res.json({currency:'USD',mtdCents:mtd._sum.amountCents||0,last30Cents:last30._sum.amountCents||0,allTimeCents:all._sum.amountCents||0,byCoupon:byCoupon.map(r=>({couponCode:r.couponCode,amountCents:r._sum.amountCents||0}))})})
