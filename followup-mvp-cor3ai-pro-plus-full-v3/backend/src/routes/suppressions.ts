import { Router } from 'express'; import { prisma } from '../prisma/client.js'; import { requireAuth, AuthRequest } from '../middleware/auth.js'; export const router=Router(); router.use(requireAuth); router.get('/',async(req:AuthRequest,res)=>{const rows=await prisma.suppression.findMany({where:{organizationId:req!.user!.orgId}}); res.json(rows)}); router.post('/',async(req:AuthRequest,res)=>{const {email,reason}=req.body||{}; if(!email) return res.status(400).json({error:'email required'}); const row=await prisma.suppression.upsert({where:{organizationId_email:{organizationId:req!.user!.orgId,email:email.toLowerCase()}},update:{reason:reason||null},create:{organizationId:req!.user!.orgId,email:email.toLowerCase(),reason:reason||null}}); res.json(row)}); router.delete('/',async(req:AuthRequest,res)=>{const {email}=req.body||{}; if(!email) return res.status(400).json({error:'email required'}); await prisma.suppression.delete({where:{organizationId_email:{organizationId:req!.user!.orgId,email:email.toLowerCase()}}}); res.json({ok:true})})
